// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id Int @id @default(autoincrement())

  fullName String
  email    String    @unique
  password String
  role     UserRole  @default(USER)
  verified DateTime?

  provider   String?
  providerId String?

  cart             Cart?
  orders           Order[]
  verificationCode VerificationCode?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id           Int                   @id @default(autoincrement())
  key          String
  products     Product[]
  translations CategoryTranslation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CategoryTranslation {
  locale Locale
  name   String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@unique([categoryId, locale])
}

model Product {
  id Int @id @default(autoincrement())

  imageUrl String

  translations ProductTranslation[]

  ingredients Ingredient[]
  items       ProductItem[]

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductTranslation {
  id     Int    @id @default(autoincrement())
  locale Locale
  name   String

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@unique([productId, locale])
}

model ProductItem {
  id Int @id @default(autoincrement())

  size      Int?
  pizzaType Int?

  cartItems CartItem[]
  prices    ProductItemPrice[]

  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model ProductItemPrice {
  id     Int    @id @default(autoincrement())
  locale Locale
  price  Int

  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  @@unique([productItemId, locale])
}

model Ingredient {
  id Int @id @default(autoincrement())

  translations IngredientTranslation[]
  prices       IngredientPrice[]
  imageUrl     String

  products  Product[]
  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model IngredientTranslation {
  id     Int    @id @default(autoincrement())
  locale Locale
  name   String

  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId Int

  @@unique([ingredientId, locale])
}

model IngredientPrice {
  id     Int    @id @default(autoincrement())
  locale Locale
  price  Int

  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId Int

  @@unique([ingredientId, locale])
}

model Cart {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  items CartItem[]

  token String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
}

model CartItem {
  id Int @id @default(autoincrement())

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  quantity Int @default(1)

  ingredients Ingredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  token String

  totalPrice Int
  status     OrderStatus @default(PENDING)
  paymentId  String?

  items Json

  fullName String
  email    String
  phone    String
  address  String
  comment  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Cart?    @relation(fields: [cartId], references: [id])
  cartId    Int?
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  code String

  createdAt DateTime @default(now())

  @@unique([userId, code])
}

model Story {
  id              Int    @id @default(autoincrement())
  previewImageUrl String

  items StoryItem[]

  createdAt DateTime @default(now())
}

model StoryItem {
  id Int @id @default(autoincrement())

  storyId Int
  story   Story @relation(fields: [storyId], references: [id])

  sourceUrl String

  createdAt DateTime @default(now())
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}

enum Locale {
  ru
  uk
  en
}
